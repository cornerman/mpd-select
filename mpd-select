#!/bin/bash

next_playlist_position() {
    echo $(($(mpc playlist | wc -l) + 1))
}

play_next_playlist() {
    local playing=$(mpc | grep -Eo "^\[playing\]")

    [ -z "$playing" ] && mpc play "$1" > /dev/null 2>&1
}

add_playlist() {
    local stations=$(mpc lsplaylists)

    local prefix=""
    local prompt="playlist"
    if [ -n "$1" ]; then
        prefix=$1"_"
        local prompt="playlist-$1"
        stations=$(echo "$stations" | grep "^$prefix" | sed "s/^$prefix//g")
    fi

    local playlists=$(echo "$stations" | sort | $DMENU -p "$prompt: ")
    if [ -n "$playlists" ]; then
        local number=$(next_playlist_position)
        while read -r playlist; do
            mpc load "${prefix}${playlist}" >/dev/null
        done <<< "$playlists"
        play_next_playlist "$number"
    fi
}

add_query() {
    local resources=$(mpc list "$1" | $DMENU -p "$1: ")
    if [ -n "$resources" ]; then
        local number=$(next_playlist_position)
        while read -r resource; do
            mpc findadd "$1" "$resource"
        done <<< "$resources"
        play_next_playlist "$number"
    fi
}

add_library() {
    local number=$(next_playlist_position)
    local all="[ALL]"

    local artist=$(echo -e "$all\n$(mpc list artist)\n" | $DMENU -p "artist: ")
    if [ "$artist" = "$all" ]; then
        mpc listall | mpc add;
    elif [ -n "$artist" ]; then
        local album=$(echo -e "$all\n$(mpc list album artist "$artist")" | $DMENU -p "album: ")
        if [ "$album" = "$all" ]; then
            mpc findadd artist "$artist"
        elif [ -n "$album" ]; then
            local songs=$(echo -e "$all\n$(mpc list title album "$album")" | $DMENU -p "title: ")
            if [ "$songs" = "$all" ]; then
                mpc findadd album "$album"
            else
                while read -r song; do
                    mpc findadd title "$song"
                done <<< "$songs"
            fi
        fi
    fi

    play_next_playlist "$number"
}

get_playlist() {
    mpc -f "%position% - %artist% - %album% - %title%" playlist
}

start_playlist() {
    mpc play 1 > /dev/null 2>&1
}

goto_playlist() {
    local song=$(get_playlist | $DMENU -p "goto: ")

    [ -n "$song" ] && mpc play "${song%%\ *}"
}

remove_playlist() {
    local songs=$(get_playlist | $DMENU -p "remove: " | sort -n -r)
    while read -r song; do
        mpc del "${song%%\ *}"
    done <<< "$songs"
}

shuffle_playlist() {
    mpc shuffle
}

clear_playlist() {
    mpc clear
}

play_toggle() {
    mpc toggle
}

DMENU="dmenu"
PLAYLISTS=""
while getopts d:p: opt; do
  case $opt in
  d)
      DMENU=$OPTARG
      ;;
  p)
      PLAYLISTS="playlist-$OPTARG\n$PLAYLISTS"
      ;;
  esac
done

shift $((OPTIND - 1))

status=$(mpc | head -n -1 | sed ':a;N;$!ba;s/\n/ /g' | sed s/#.*$// | xargs -I{} echo -e '\n(toggle) {}')
selected=$(echo -e "${PLAYLISTS}playlist\nartist\nalbum\ntitle\nlibrary\nstart playlist\ngoto in playlist\nremove from playlist\nshuffle playlist\nclear playlist$status" | $DMENU -p "mpd-select: ")
case $selected in
    playlist* )
        custom=$(echo "$selected" | awk -F- '{print $2}')
        add_playlist "$custom"
        ;;
    library )
        add_library
        ;;
    "start playlist" )
        start_playlist
        ;;
    "goto in playlist" )
        goto_playlist
        ;;
    "remove from playlist" )
        remove_playlist
        ;;
    "shuffle playlist" )
        shuffle_playlist
        ;;
    "clear playlist" )
        clear_playlist
        ;;
    \(toggle\)* )
        play_toggle
        ;;
    * )
        [ "$selected" = "" ] || add_query "$selected"
        ;;
esac
